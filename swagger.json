{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "User Employee Application API",
    "description": "User Employee Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "vast-reaches-29333.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Employees",
      "description": "API for employees in the system"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "User Sign in in system",
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Email of employee that we want to find",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "password of employee that we want to find",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User signin"
          }
        }
      }
    },
    "/employee/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/employee/signin": {
      "post": {
        "tags": [
          "Employees"
        ],
        "description": "Employee Sign in in the system",
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Email of employee that we want to find",
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "password of employee that we want to find",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Employee signin"
          }
        }
      }
    },
    "/user/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users": {
      "parameters": [
        {
          "name": "first_name",
          "in": "query",
          "description": "first name of employee that we want to find",
          "type": "string"
        },
        {
          "name": "last_name",
          "in": "query",
          "description": "last name of employee that we want to find",
          "type": "string"
        },
        {
          "name": "email",
          "in": "query",
          "description": "Email of employee that we want to find",
          "type": "string"
        },
        {
          "name": "employeeId",
          "in": "query",
          "description": "EmployeeId of employee that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee with given ID",
        "responses": {
          "200": {
            "description": "Employee is found",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      }
    },
    "/employee/{empId}": {
      "parameters": [
        {
          "name": "empId",
          "in": "path",
          "required": true,
          "description": "ID of employee that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee with given ID",
        "responses": {
          "200": {
            "description": "Employee is found",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      }
    },
    "/employees": {
      "parameters": [
        {
          "name": "first_name",
          "in": "query",
          "description": "first name of employee that we want to find",
          "type": "string"
        },
        {
          "name": "last_name",
          "in": "query",
          "description": "last name of employee that we want to find",
          "type": "string"
        },
        {
          "name": "email",
          "in": "query",
          "description": "Email of employee that we want to find",
          "type": "string"
        },
        {
          "name": "employeeId",
          "in": "query",
          "description": "EmployeeId of employee that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get employee with given ID",
        "responses": {
          "200": {
            "description": "Employee is found",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Employee": {
      "required": [
        "first_name",
        "last_name",
        "email",
        "password",
        "employee_id"
      ],
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "employee_id": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Employees": {
      "type": "array",
      "$ref": "#/definitions/Employee"
    }
  }
}
